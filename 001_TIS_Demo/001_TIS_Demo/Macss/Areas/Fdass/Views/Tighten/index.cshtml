@using Macss.Areas.Fdass.ViewModels
@model TightenViewModel

@section Heads {
    <link href="/Content/details.css" rel="stylesheet" />
    @*<link href="/Content/reset.css" rel="stylesheet" />*@
}

<style>

    h1, .h1,
    h2, .h2,
    h3, .h3 {
    margin-top: 2px;
    margin-bottom: 0px;
    }

    #loading {
        display: table;
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
        background-color: #fff;
        opacity: 0.8;
    }

    #loading .loadingMsg {
        display: table-cell;
        text-align: center;
        vertical-align: middle;
        padding-top: 50px;
        background: url("@Url.Content("~/Areas/Fdass/Img/gif-load.gif")") center center no-repeat;
    }

</style>

@{
    ViewBag.Title = ViewBag.Title;
}

<div class="row">
    <div class="navbar2 navbar-default" style="padding-bottom:10px;">
        <h2>@ViewBag.Title</h2>
        <hr />
        @Html.AntiForgeryToken()
        <div class="row">
            <div id="ajax-result"></div>
            <div class="col-sm-10 validation-summary-errors " style="display: none" id="error"><ul><li></li></ul></div>
        </div>
        <div class="row">
            @Html.LabelFor(model => model.YyyyMm, htmlAttributes: new { @class = "col-sm-2 control-label label_large" })
            <div class="col-sm-4" style="width:250px; display:inline-flex;">
                @Html.ValidationMessageFor(model => model.YyyyMm, "", new { @class = "text-danger" })
                @Html.TextBoxFor(model => model.YyyyMm, htmlAttributes: new { @class = "form-control ; datearea-form ", @maxlength = "7", style = "width: 80px;ime-mode: inactive" })
                <div class="validation-summary-valid text-danger" data-valmsg-summary="true" style="display: none; padding-left: 5px;" id="oputError"><span></span></div>
            </div>
            @Html.LabelFor(model => model.MatujimeKanri.Month, htmlAttributes: new { @class = "col-md-3 control-label", style = "width: 160px" })
            @Html.DisplayFor(model => model.MatujimeKanri.Month)
        </div>

            <div class="row">
                <div class="col-sm-2 label_large"></div>
                <div class="col-sm-4" style="width:250px;"></div>
                <div style="width: 80px"></div>
                @Html.LabelFor(model => model.MatujimeKanri.EndTt, htmlAttributes: new { @class = "col-md-3 control-label", style = "width: 160px" })
                @Html.DisplayFor(model => model.MatujimeKanri.EndTt)
            </div>

            <div class="row">
                <div class="col-sm-2 label_large"></div>
                <div class="col-sm-4" style="width:250px;"></div>
                <div style="width: 80px"></div>
                @Html.LabelFor(model => model.MatujimeKanri.Status, htmlAttributes: new { @class = "col-md-2 control-label", style = "width: 160px" })
                @Html.DisplayFor(model => model.MatujimeKanri.Status)
            </div>
            <div class="row">
                <div class="col-sm-2 label_large"></div>
                <div class="col-sm-4" style="width:250px;"></div>
                <div style="width: 80px"></div>
                @Html.LabelFor(model => model.MatujimeKanri.CrtName, htmlAttributes: new { @class = "col-md-2 control-label", style = "width: 160px" })
                @Html.DisplayFor(model => model.MatujimeKanri.CrtName)
            </div>

            <div class="row">
                <div class="col-md-2 label_large"></div>
                <div class="col-md-4 control-label" style="width: 100px">
                    <button class="btn btn-default" style="width:50px; height:30px; padding:0; text-align: center;" id="run">実行</button>
                </div>

            </div>

        </div>
</div>

@section Scripts  {
    @Styles.Render("~/Content/bootstrap-datepicker")
    @Scripts.Render("~/bundles/bootstrap-datepicker")
    <script>

        window.onload = function () {
            $('#sidebar').toggleClass('active');
        };

        $(function () {
            $('.date').datepicker({
                format: "yyyy/mm",
                language: "ja",
                autoclose: true, //日付選択で自動的にカレンダーを閉じる
                orientation: 'bottom left'
            });
        });

        $(function () {
            $('#run').click(function () {

                if ($("#YyyyMm").val() == "") {
                    document.getElementById("oputError").innerHTML = "処理対象年月は必須です";
                    document.getElementById("oputError").style.display = "";
                    return;
                }
                document.getElementById("oputError").style.display = "none";

                dispLoading("しばらくお待ちください...");
                var postData = {
                    YyyyMm: $('input[name="YyyyMm"]').val(),
                    ButtonType: 'run'
                };

                 $.ajax({
                    url: '@Url.Action("Tighten")',
                    type: 'POST',
                    data: JSON.stringify(postData),
                    dataType: 'json',
                    contentType: 'application/json',

                 }).done(function (result) {
                     succsess = result.succsess;
                     errorMsg = result.errorMsg;
                     if (result.succsess == true) {
                         window.location.href = '@Url.Action("Index")';
                     } else {
                         var msg = "<ul><li>" + result.errorMsg + "</li></ul>"
                         document.getElementById("error").innerHTML = msg;
                         document.getElementById("error").style.display = "";

                     }


                 }).fail(function (jqXHR, textStatus, errorThrown) {
                        //例外の場合、エラー画面に飛ばす
                        window.location.href = '/Error/Index'
                 }).always(function () {
                     removeLoading();
                 });

            });
         });

        function dispLoading(msg) {
            // 引数なし（メッセージなし）を許容
            if (msg == undefined) {
                msg = "";
            }
            // 画面表示メッセージ
            var dispMsg = "<div class='loadingMsg'>" + msg + "</div>";
            // ローディング画像が表示されていない場合のみ出力
            if ($("#loading").length == 0) {
                $("body").append("<div id='loading'>" + dispMsg + "</div>");
            }
        }

        function removeLoading() {
            $("#loading").remove();
        }


    </script>
}
