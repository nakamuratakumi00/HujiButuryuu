@using Macss.Areas.Tass.ViewModels
@model MaintTodokesakiViewModel

<style>
    input[type=radio] {
        display: none;
    }

    input[type="radio"]:checked + label {
        background: #31A9EE;
        color: #ffffff;
    }

    .label {
        color: #333;
        font-size: 90%;
        font-weight: normal;
        display: block;
        float: left;
        width: 45px;
        height: 28px;
        padding-left: 5px;
        padding-right: 5px;
        text-align: center;
        line-height: 20px;
        border: 1px solid #ccc;
        border-radius: 0px;
    }

    h1, .h1,
    h2, .h2,
    h3, .h3 {
        margin-top: 2px;
        margin-bottom: 0px;
    }

    table {
        border: solid 0.5px
    }

    td.SDEK {
        text-align: center;
        width: 35px;
        height: 35px;
    } 

    select {
        text-transform: none;
        width: 100%;
    }
</style>

<div class="row">
    <div class="navbar2 navbar-default" style="padding-bottom:10px;">
        <h4>@ViewBag.Title</h4>
        <hr />
        @using (Html.BeginForm("", "MaintTodokesaki/Index", FormMethod.Post, new { enctype = "multipart/form-data", id = "MaintHinmeiForm" }))
        {
        <div class="form-horizontal">
            <div class="form-group">
                <div class="list-size">
                    <div class="control-label col-md-2 label_middle">使用区分</div>
                    <table border="1">
                        <tr>
                            <td class="SDEK">
                                H
                            </td>
                            <td class="SDEK">
                                i
                            </td>
                            <td class="SDEK">
                                M
                            </td>
                            <td class="SDEK">
                                P
                            </td>
                            <td class="SDEK">
                                集
                            </td>
                            <td class="SDEK">
                                構
                            </td>
                            <td class="SDEK">
                                Y
                            </td>
                            <td class="SDEK">
                                半
                            </td>
                            <td class="SDEK">
                                長
                            </td>
                            <td class="SDEK">
                                在
                            </td>
                            <td class="SDEK">
                                需
                            </td>
                            <td class="SDEK">
                                顧
                            </td>
                            <td class="SDEK">
                                得
                            </td>
                            <td class="SDEK">
                                ブ
                            </td>
                            <td class="SDEK">
                                基
                            </td>
                        </tr>

                        <tr>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek01, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px;ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek02, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px;ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek03, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek04, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek05, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek06, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek07, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek08, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px;ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek09, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek10, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek11, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek12, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek13, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek14, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                            <td class="SDEK">
                                @Html.EditorFor(model => model.Sdek15, new { htmlAttributes = new { @class = "form-control", maxlength = 1, style = "width: 37px; height: 35px; ime-mode: inactive" } })
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="col-md-2 label_middle"></div>
                <div class="list-size">
                    ※すべて空白の場合には全件出力となります
                </div>
                <br />
                <div class="col-md-2 label_middle"></div>
                <div class="list-size">

                    <input type="submit" style="width:45px; height:30px; padding: 0px; text-align: center" name="output" id='output' value="出力" class="btn btn-default" onclick="return window.confirm('ダウンロードしてもよろしいですか？');" />
                    <input type="submit" style="width:45px; height:30px; padding: 0px; text-align: center" name="import" id='import' value="取込" class="btn btn-default" />
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Excel

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2 label_middle"></div>
                <div class="col-md-2" style="width:390px">
                    <input type="file" class="FullWidth" name="uploadFile" id="uploadFile" style="float: left;" accept=".xlsx" />
                </div>
            </div>
            <div>
                @(ViewBag.Success == 1 ?
                                    @Html.ValidationSummary(true, "", new { @class = "validation-summary-success", id = "info" }) :
                                    @Html.ValidationSummary(true, "", new { @class = "", id = "error" })
                )
            </div>
        </div>
        }
    </div>
</div>

@section Scripts {
    <script>

    window.onload = function () {
        $('#sidebar').toggleClass('active');
    };

    $(function () {
        $('#import').click(function () {
            $("#import").prop("disabled", true);
            $("#output").prop("disabled", true);

        });
    });

    $(function () {
        $('#uploadFile').click(function () {
            if (document.getElementById("error") != null) {
                document.getElementById("error").style.display = "none";
            }

            if (document.getElementById("info") != null) {
                document.getElementById("info").style.display = "none";
            }

        });
    });

    (function ($) {
        $.fn.resetValidation = function () {
            $("div#error").removeClass("validation-summary-errors");
            $("div#error").addClass("validation-summary-valid").find("ul").empty();
            return;
        };
    })(jQuery);

    $(function () {
        $('#output').click(function () {
            // ボタンを有効・無効を設定
            outputBtn = document.getElementById('output');
            importBtn = document.getElementById('import');
            outputBtn.disabled = "true";
            importBtn.disabled = "true";

            $(this).resetValidation();
            // ボタンの属性設定
            $('<input>').attr({
                type: 'hidden',
                id: 'output',
                name: 'output',
                value: '出力'
            }).appendTo('.output');
            $('#output').submit();

            outputBtn.disabled = "";
            importBtn.disabled = "";
        });
    });
    </script>
}